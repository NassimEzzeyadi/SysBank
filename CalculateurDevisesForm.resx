<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="siticonePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>